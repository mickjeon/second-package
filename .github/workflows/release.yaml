name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Validate version format
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Invalid version format. Use semantic versioning (e.g., 1.2.3 or 1.2.3-beta)"
            exit 1
          fi
      
      - name: Check if release already exists
        run: |
          if gh release view v${{ inputs.version }} &>/dev/null; then
            echo "Release v${{ inputs.version }} already exists"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Generate changelog
        id: changelog
        run: |
          if [ -n "${{ steps.prev_tag.outputs.PREV_TAG }}" ]; then
            echo "## Changes since ${{ steps.prev_tag.outputs.PREV_TAG }}" > changelog.md
            echo "" >> changelog.md
            git log --pretty=format:"- %s (%h)" ${{ steps.prev_tag.outputs.PREV_TAG }}..HEAD >> changelog.md
          else
            echo "## Initial Release" > changelog.md
            echo "" >> changelog.md
            git log --pretty=format:"- %s (%h)" >> changelog.md
          fi
          
          # Set multiline output
          {
            echo 'CHANGELOG<<EOF'
            cat changelog.md
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        run: |
          gh release create v${{ inputs.version }} \
            --title "Release v${{ inputs.version }}" \
            --notes-file release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create release summary
        run: |
          echo "## ðŸŽ‰ Release v${{ inputs.version }} Created Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: v${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Release**: Created âœ…" >> $GITHUB_STEP_SUMMARY
          echo "- **Release URL**: https://github.com/${{ github.repository }}/releases/tag/v${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY